module cpu_tb;

	reg Reset;			  	// Reset signal
    reg [31:0] instrWord; 	// Instruction Register
    reg newInstr;         	// Used to signal a new instruction

    reg Clk;				// Clock Signal


	// CPU instantiation
	mipscpu myCPU(Reset, Clk, instrWord, newInstr);
    myCPU.myDataMem.memory[0] = 10; // a = 10
    myCPU.myDataMem.memory[1] = 22; // b = 22
    myCPU.myDataMem.memory[2] = 6; // c = 6
    d = a + b – c ;
    instrWord = lw $1, 0($0);
    newInstr = 0;
    #1 newInstr = 1;
    #1 newInstr = 0;
    #10;
    instrWord = lw $2, 1($0);
    newInstr = 0;
    #1 newInstr = 1;
    #1 newInstr = 0;
    #10;
    $display(“d = %d”, myCPU.myDataMem.memory[3]);
    // Clock signal generator
    initial
        Clk = 0;

    always
        #1 Clk = ~Clk;
        
    // Waveform dump for waveform viewer application
	initial
	begin
		$dumpfile("cpu.vcd");
		$dumpvars;
	end
        
	// Test bench
    initial
    begin
    	// Add your testbench here
    	
    end
    

endmodule
